while true; do
    if [ -f .push-to-server ]; then
        if [ ! -f package.json ]; then
            echo 'no package.json'
            exit 1
        fi
            
        PORT=3000
        LOCATION=/

        source .push-to-server

        if [ -z $TARGET ]; then
            echo "no TARGET set in environment or .push-to-server"
            exit 1
        fi

        echo Pushing to $TARGET from $PWD

        # This CAN do a "cd"
        if [ "$BUILD" != "" ]; then
            eval "$BUILD" || exit 1
        fi

        if [ "$SITEURL" = "" ]; then
            SITEURL=https://$TARGET$LOCATION
        fi

        N="" @ --exclude=node_modules

        # echo Trying new port/proxy, harmless if dup
        # export PORT LOCATION
        # configure-server-app $TARGET

        echo Pushing to /proxy_pass/$PORT
        # rsync -avR . $N "--exclude=.*" --exclude=OLD root@$TARGET:/proxy_pass/$PORT || exit 1
        rsync -avR . $N "--exclude=.*" --exclude=OLD root@$TARGET:/proxy_pass/$PORT || exit 1
        (cd ~/Repos; rsync -avR datapages-auto datapages-base config-state --exclude=".*" root@$TARGET:/proxy_pass/$PORT/node_modules) || exit 1


        # check auth and add ssh host so "npm update" can install
        # private github dependencies (like git+ssh://github.com/ ...)
        # ssh -A $TARGET ". .nvm/nvm.sh; ssh -o StrictHostKeyChecking=no -T git@github.com; cd /proxy_pass/$PORT && npm update" || exit 1

        if [ "$AFTER" != "" ]; then
            eval "$AFTER" || exit 1
        fi
        
        echo
        echo "## Consider something like:"
        echo
        echo ssh root@$TARGET
        echo "cd /proxy_pass/$PORT ; export PORT=$PORT ; export SITEURL=$SITEURL"
        echo "pm2 status"
        echo
        echo "node run # check for errors"
        echo "pm2 stop prod"
        echo "pm2 start --name prod run.js"
        echo " or "
        echo "pm2 start run.js"
        echo
        echo pm2 save
        echo
        echo '## Or just:'
        echo ssh $TARGET '". .nvm/nvm.sh; pm2 restart prod"'
        echo
        echo firefox --new-window $SITEURL

        exit 0
    fi
    echo "push-to-server: missing config in $PWD"
    if [ "$PWD" = "/" ]; then
cat <<EOF

Create your .push-to-server file with:

cat > .push-to-server <<_END
# These are shell variables for push-to-server

# Hostname to push to
TARGET=example.com

# Where on that host are we handling
# LOCATION=/

#  Additional bits of script, can include cd before rsync
# BUILD='npm build && cd dist'
# AFTER=''

_END

EOF
        exit 1
    fi
    cd ..
done
