
while true; do
    if [ -f .push-to-server ]; then
        source .push-to-server
        echo Pushing to $TARGET from $PWD

        if [ "$BUILD" != "" ]; then
            eval "$BUILD" || exit 1
        fi

        if [ "$SITEURL" = "" ]; then
            SITEURL=https://$TARGET$LOCATION
        fi

        N=--exclude=node_modules
        if [ "$PORT" = "" ]; then
            echo Pushing to /sites
            rsync -avR . $N "--exclude=.*" --exclude=OLD root@$TARGET:/sites/$TARGET
        else
            echo Pushing to /proxy_pass
            rsync -avR . $N "--exclude=.*" --exclude=OLD root@$TARGET:/proxy_pass/$PORT || exit 1
            # the -t is needed for nvm to find npm & node
            ssh -t $TARGET "cd /proxy_pass/$PORT && npm i" || exit 1
            echo
            echo "Consider"
            echo
            echo ssh $TARGET
            echo "cd /proxy_pass/$PORT ; export PORT=$PORT ; export SITEURL=$SITEURL"
            echo "node run.sh"
            echo "pm2 start run.js"
        fi

        if [ "$AFTER" != "" ]; then
            eval "$AFTER" || exit 1
        fi

        firefox --new-window $SITEURL

        exit 0
    fi
    echo "push-to-server: missing config in $PWD"
    if [ "$PWD" = "/" ]; then
cat <<EOF

Create your .push-to-server file with:

cat > .push-to-server <<_END
# These are shell variables for push-to-server

# Hostname to push to
TARGET=example.com

# If these files are for a live-site, which port will they run on?
# PORT=3000

# If live-site, Where should nginx expose this port? (like /foo/)
LOCATION=/
_END

EOF
        exit 1
    fi
    cd ..
done
